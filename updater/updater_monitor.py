'''

Author: Hieu Do 

Start Date: June 6, 2016

Description: 
Retrieves a list of all the files from `https://seattle.poly.edu/updatesite/` 
and returns the files as well as their last modified dates.

Usage: 
python updater_monitor.py

'''
import tempfile
import softwareupdater

# this is being done so that the resources accounting doesn't interfere with logging
from repyportability import *
_context = locals()
add_dy_support(_context)


signeddata = dy_import_module("signeddata.r2py")
advertise_monitor = dy_import_module("advertise_monitor.r2py")

updatereurl = "https://seattle.poly.edu/updatesite/"

updater_servername = "seattle.poly.edu"
updater_serverport = 443 # port obtain from `nmap 128.238.63.51`

softwareupdatepublickey = {'e':82832270266597330072676409661763231354244983360850404742185516224735762244569727906889368190381098316859532462559839005559035695542121011189767114678746829532642015227757061325811995458461556243183965254348908097559976740460038862499279411461302045605434778587281242796895759723616079286531587479712074947611, 'n':319621204384190529645831372818389656614287850643207619926347176392517761801427609535545760457027184668587674034177692977122041230031985031724339016854308623931563908276376263003735701277100364224187045110833742749159504168429702766032353498688487937836208653017735915837622736764430341063733201947629404712911592942893299407289815035924224344585640141382996031910529762480483482480840200108190644743566141062967857181966489101744929170144756204101501136046697030104623523067263295405505628760205318871212056879946829241448986763757070565574197490565540710448548232847380638562809965308287901471553677400477022039092783245720343246522144179191881098268618863594564939975401607436281396130900640289859459360314214324155479461961863933551434423773320970748327521097336640702078449006530782991443968680573263568609595969967079764427272827202433035192418494908184888678872217792993640959292902948045622147093326912328933981365394795535990933982037636876825043938697362285277475661382202880481400699819441979130858152032120174957606455858082332914545153781708896942610940094268714863253465554125515897189179557899347310399568254877069082016414203023408461051519104976942275899720740657969311479534442473551582563833145735116565451064388421}


def main():
  advertise_monitor.checkServerStatus(updater_servername, updater_serverport)

  tempdir = tempfile.mkdtemp()+"/"
  metainfo_downloaded = softwareupdater.safe_download(updatereurl, "metainfo", tempdir, 1024*32)
  if not metainfo_downloaded:
    print("Failed to download metainfo.")
    return
  print("Successfully downloaded metainfo")

  # read the file data into a string
  newmetafileobject = file(tempdir+"metainfo")
  newmetafiledata = newmetafileobject.read()
  newmetafileobject.close()

  if not signeddata.signeddata_issignedcorrectly(newmetafiledata, softwareupdatepublickey):
    print("CRITICAL - Downloaded metainfo not signed correctly. The updater site is delivering the correct updates")
    return
  print("Downloaded metainfo signed correctly. The updater site is delivering the correct updates")
  

if __name__ == '__main__':
  main()