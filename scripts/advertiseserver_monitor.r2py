'''
Author: Hieu Do 

Start Date: June 23, 2016

Description: 
Check the status of the advertise server

Usage: 
python repy.py restrictions.default dylink.r2py advertiseserver_monitor.r2py

Other notes:
- notification system will be implemented
- see rhizoma.mix L241 
  get_uservessels(keyname): use .publickey file to look up (centralizedadvertise_lookup)

'''

# session = dy_import_module('session.r2py')
sockettimeout = dy_import_module('sockettimeout.r2py')


# Check if the server is alive or dead; if dead, why? 
def checkServerStatus(name, port):
  try:
    # if domain name is nonexistent, there is no need to open a connection
    serverip = gethostbyname(name)
  except NetworkAddressError:
    log("NetworkAddressError - Cannot resolve domain name '" + str(name) + "'. No connection is opened.\n")
  else: 
    try:
      # if domain name is resolved, try opening a connection
      sockobj = sockettimeout.timeout_openconnection(serverip, port, timeout=10)
    except ConnectionRefusedError:
      # occurs when trying to connect the server via a closed port
      log("ConnectionRefusedError - Server '" + str(name) + "' is closed on port " + str(port) + ".\n")
    except TimeoutError:
      log("Connection to '" + str(name) + "' on port " + str(port) + " causes a timeout.\n")
    except InternetConnectivityError:
      log("Network is down, or host cannot be reached from the local IP address.\n")
    else:
      log("Server name '" + str(name) + "' is resolved. Connection is opened successfully on port " + str(port) + ".\n")


# Test checkServerStatus
# test the advertise server on an open port. Connection should be opened successfully.
# Open ports for advertiseserver.poly.edu: 22, 80, 111, 443, 10101, 10102, 37856, 54912
advertiseserver_name = "advertiseserver.poly.edu"
advertiseserver_port = 10102
checkServerStatus(advertiseserver_name, advertiseserver_port)

# test the advertise server on a closed port. ConnectionRefusedError should be raised. 
advertiseserver_closedport = 3333
checkServerStatus(advertiseserver_name, advertiseserver_closedport)

# test on a nonexistent domain
nxdomain_name = "nonexistent"
# does not matter which port because checkServerStatus would exit if gethostbyname(name) raises error
nxdomain_port = 3333 
checkServerStatus(nxdomain_name, nxdomain_port)

# test on a timeout server
timeoutserver_name = "google.com"
timeoutserver_port = 81
checkServerStatus(timeoutserver_name, timeoutserver_port)

